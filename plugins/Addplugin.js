const fs = require('fs');
const path = require('path');
const { cmd } = require('../command');

cmd({
    pattern: "addplugin",
    desc: "‡∂±‡∑Ä plugin ‡∂ë‡∂ö‡∂ö‡∑ä bot ‡∂ë‡∂ö‡∂ß dynamically ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±",
    category: "owner",
    react: "üîå",
    filename: __filename
},
async (sock, mek, m, { from, args, q, isOwner, reply }) => {
    if (!isOwner) {
        await reply("‚ùå ‡∂∏‡∑ô‡∂∏ command ‡∂ë‡∂ö bot owner‡∂ß ‡∂¥‡∂∏‡∂´‡∂∫‡∑í.");
        return;
    }

    if (!q) {
        await reply("‚ùå Plugin code ‡∂ë‡∂ö command ‡∂ë‡∂ö‡∂≠‡∑ä ‡∂ë‡∂ö‡∑ä‡∂ö ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∂ã‡∂Ø‡∑è: .addplugin [plugin code]");
        return;
    }

    try {
        // Plugins folder ‡∂ë‡∂ö exist ‡∂ö‡∂ª‡∂±‡∑Ä‡∂Ø ‡∂∂‡∂Ω‡∂±‡∑Ä‡∑è, ‡∂±‡∑ê‡∂≠‡∑ä‡∂±‡∂∏‡∑ä ‡∑Ñ‡∂Ø‡∂±‡∑Ä‡∑è
        const pluginsDir = path.join(__dirname, '../plugins');
        if (!fs.existsSync(pluginsDir)) {
            fs.mkdirSync(pluginsDir, { recursive: true });
            await reply("üìÅ Plugins folder ‡∂ë‡∂ö ‡∑Ñ‡∂Ø‡∂± ‡∂Ω‡∂Ø‡∑í.");
        }

        // Unique plugin name ‡∂ë‡∂ö‡∂ö‡∑ä timestamp ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∑Ñ‡∂Ø‡∂±‡∑Ä‡∑è
        const pluginName = `plugin_${Date.now()}.js`;
        const pluginPath = path.join(pluginsDir, pluginName);

        // Debug: Log the path
        console.log(`Attempting to save plugin at: ${pluginPath}`);

        // Basic code validation
        if (!q.includes('cmd') || !q.includes('require')) {
            await reply("‚ö†Ô∏è Plugin code ‡∂ë‡∂ö‡∑ö 'cmd' function ‡∂ë‡∂ö ‡∑É‡∑Ñ require statements ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑ä‡∂± ‡∂ï‡∂±.");
        }

        // Check write permissions
        try {
            fs.accessSync(pluginsDir, fs.constants.W_OK);
        } catch (permError) {
            await reply("‚ùå Plugins folder ‡∂ë‡∂ö‡∂ß write ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß permission ‡∂±‡∑ê‡∂≠. Permission check ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
            console.error(`Permission error: ${permError.message}`);
            return;
        }

        // Plugin code ‡∂ë‡∂ö file ‡∂ë‡∂ö‡∂ö‡∂ß save ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
        fs.writeFileSync(pluginPath, q);
        console.log(`Plugin saved at: ${pluginPath}`);

        // File ‡∂ë‡∂ö save ‡∑Ä‡∑î‡∂´‡∑è‡∂Ø ‡∂∂‡∂Ω‡∂±‡∑Ä‡∑è
        if (!fs.existsSync(pluginPath)) {
            await reply("‚ùå Plugin ‡∂ë‡∂ö save ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∑Ä‡∑î‡∂´‡∑è.");
            console.error("File save failed: File does not exist after write.");
            return;
        }

        // Plugin ‡∂ë‡∂ö dynamically load ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
        try {
            require(pluginPath);
            await reply(`‚úÖ '${pluginName}' plugin ‡∂ë‡∂ö successfully ‡∂ë‡∂ö‡∂≠‡∑î ‡∑Ä‡∑î‡∂´‡∑è!`);
            console.log(`Plugin ${pluginName} loaded successfully.`);
        } catch (loadError) {
            // Load ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∑Ä‡∑î‡∂´‡∑ú‡∂≠‡∑ä file ‡∂ë‡∂ö delete ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
            fs.unlinkSync(pluginPath);
            await reply(`‚ùå Plugin load ‡∂ö‡∂ª‡∂Ø‡∑ä‡∂Ø‡∑í error ‡∂ë‡∂ö‡∂ö‡∑ä: ${loadError.message}`);
            console.error(`Load error: ${loadError.message}`);
            return;
        }

    } catch (error) {
        await reply(`‚ùå Plugin ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂Ø‡∑ä‡∂Ø‡∑í error ‡∂ë‡∂ö‡∂ö‡∑ä: ${error.message}`);
        console.error(`General error: ${error.message}`);
    }
});
